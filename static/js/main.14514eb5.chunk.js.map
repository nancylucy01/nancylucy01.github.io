{"version":3,"sources":["mountain2.jpg","App.js","reportWebVitals.js","index.js"],"names":["Trips","props","trips","trips_name","trips_description","trips_difficulty","trips_days","trips_type","trips_x","trips_y","Home","state","trips_distance","trips_search","onChangeTripsName","bind","onChangeTripsDescription","onChangeTripsDifficulty","onChangeTripsDistance","onChangeTripsDays","onChangeTripsType","onChangeTripsX","onChangeTripsY","findTrip","searchTrip","onChangeTripsSearch","e","preventDefault","this","setState","target","value","console","log","app","Realm","getApp","a","credentials","anonymous","logIn","user","error","loginAnonymous","then","currentUser","mongoClient","db","collection","find","hikes","forceUpdate","map","currentTrips","i","length","newtrips","curTrip","push","maxDeg","newtrips2","xDist","yDist","newtrips3","curDaysDiff","Math","abs","toLowerCase","search","String","className","Container","Form","Row","Col","Group","FormControl","type","placeholder","onChange","Button","variant","as","Link","to","Label","Control","id","name","required","onClick","Image","src","mount","fluid","tripsList","React","Component","CreateTrip","onSubmit","newTrips","insertOne","document","getElementById","reset","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.14514eb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mountain2.56a5f758.jpg\";","import {\n  Image,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormControl,\n} from \"react-bootstrap\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport mount from \"./mountain2.jpg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport * as Realm from \"realm-web\";\n\nconst Trips = (props) => (\n  <tr>\n    <td>{props.trips.trips_name}</td>\n    <td>{props.trips.trips_description}</td>\n    <td>{props.trips.trips_difficulty}</td>\n    <td>{props.trips.trips_days}</td>\n    <td>{props.trips.trips_type}</td>\n    <td>{props.trips.trips_x}</td>\n    <td>{props.trips.trips_y}</td>\n  </tr>\n);\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trips: [],\n      trips_name: \"\",\n      trips_description: \"\",\n      trips_difficulty: \"Beginner\",\n      trips_days: 0,\n      trips_x: 29.62669,\n      trips_y: -82.35617,\n      trips_type: \"Hiking\",\n      trips_distance: 0,\n      trips_search: \"\",\n    };\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\n    this.onChangeTripsDistance = this.onChangeTripsDistance.bind(this);\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\n    this.findTrip = this.findTrip.bind(this);\n    this.searchTrip = this.searchTrip.bind(this);\n    this.onChangeTripsSearch = this.onChangeTripsSearch.bind(this);\n  }\n  onChangeTripsSearch(e) {\n    e.preventDefault();\n    this.setState({\n      trips_search: e.target.value,\n    });\n    console.log(this.state.trips_search);\n  }\n  onChangeTripsName(e) {\n    this.setState({\n      trips_name: e.target.value,\n    });\n  }\n  onChangeTripsDescription(e) {\n    this.setState({\n      trips_description: e.target.value,\n    });\n  }\n  onChangeTripsDifficulty(e) {\n    this.setState({\n      trips_difficulty: e.target.value,\n    });\n  }\n  onChangeTripsDays(e) {\n    this.setState({\n      trips_days: e.target.value,\n    });\n  }\n  onChangeTripsX(e) {\n    this.setState({\n      trips_x: e.target.value,\n    });\n  }\n  onChangeTripsY(e) {\n    this.setState({\n      trips_y: e.target.value,\n    });\n  }\n  onChangeTripsType(e) {\n    this.setState({\n      trips_type: e.target.value,\n    });\n  }\n  onChangeTripsDistance(e) {\n    this.setState({\n      trips_distance: e.target.value,\n    });\n  }\n  componentDidMount() {\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        return user;\n      } catch (err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous()\n      .then((user) => {\n        console.log(\"Successfully logged in!\", user);\n      })\n      .then(() => {\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n        const hikes = trips.find();\n        return hikes;\n      })\n      .then((hikes) => {\n        this.state.trips = hikes;\n        console.log(this.state.trips);\n        this.forceUpdate();\n      });\n  } //to be moved to the trip find page\n  tripsList() {\n    return this.state.trips.map(function (currentTrips, i) {\n      return <Trips trips={currentTrips} key={i} />;\n    });\n  }\n  findTrip() {\n    //update trips back to default\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        return user;\n      } catch (err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous()\n      .then((user) => {\n        console.log(\"Successfully logged in!\", user);\n      })\n      .then(() => {\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n        const hikes = trips.find();\n        return hikes;\n      })\n      .then((hikes) => {\n        this.state.trips = hikes;\n      })\n      .then(() => {\n        //Then do any new trip setting\n        console.log(this.state.trips_search.length);\n        if (this.state.trips_search === \"\") {\n          //Trip Type Filter\n          var i = 0;\n          var newtrips = [];\n          while (i < this.state.trips.length) {\n            let curTrip = this.state.trips[i];\n            if (curTrip.trips_type == this.state.trips_type) {\n              newtrips.push(curTrip);\n            }\n            i = i + 1;\n          }\n          //Distance Filter\n          if (this.state.trips_distance != 0){\n            i = 0;\n            //Max Travel Distance = 69*sqrt(degreesX^2+degreesY^2)\n            //(Max Travel Distance/69)^2 = degreesX^2+degreesY^2\n            let maxDeg = (this.state.trips_distance / 69)*(this.state.trips_distance / 69)\n            var newtrips2 = [];\n            while (i < newtrips.length) {\n              let curTrip = newtrips[i];\n              let xDist = curTrip.trips_x-this.state.trips_x\n              let yDist = curTrip.trips_y-this.state.trips_y\n              let curDeg = (xDist*xDist)+(yDist*yDist)\n              if (curDeg <= maxDeg) {\n                newtrips2.push(curTrip);\n              }\n              i = i + 1;\n            }\n            //Days Sort\n            if (this.state.trips_days != 0){\n              var newtrips3 = [];\n              var curDaysDiff = 0\n              while (curDaysDiff < 21){\n                i=0\n                while (i < newtrips2.length) {\n                  if (Math.abs(newtrips2[i].trips_days-this.state.trips_days) == curDaysDiff) {\n                    newtrips3.push(newtrips2[i]);\n                  }\n                  i = i + 1;\n                }\n                curDaysDiff = curDaysDiff + 1;\n              }\n              this.setState({ trips: newtrips3 }); \n            }else{\n              this.setState({ trips: newtrips2 }); \n            }\n          }else{\n            \n            //No distance Days Sort\n            if (this.state.trips_days != 0){\n              var newtrips3 = [];\n              var curDaysDiff = 0\n              while (curDaysDiff < 21){\n                i=0\n                while (i < newtrips.length) {\n                  if (Math.abs(newtrips[i].trips_days-this.state.trips_days) == curDaysDiff) {\n                    newtrips3.push(newtrips[i]);\n                  }\n                  i = i + 1;\n                }\n                curDaysDiff = curDaysDiff + 1;\n              }\n              this.setState({ trips: newtrips3 }); \n            }else{\n              this.setState({ trips: newtrips }); \n            }\n        }\n          this.forceUpdate();\n\n        } else {\n          this.searchTrip();\n        }\n      });\n  }\n\n  searchTrip() {\n        var i = 0;\n        var newtrips = [];\n        while (i < this.state.trips.length) {\n          let curTrip = this.state.trips[i];\n          console.log(\n            curTrip.trips_name.toLowerCase().search(String(this.state.trips_search).toLowerCase())\n          );\n          if (\n            curTrip.trips_name.toLowerCase().search(String(this.state.trips_search).toLowerCase()) >= 0\n          ) {\n            console.log(\"addedTrip\");\n            newtrips.push(curTrip);\n          }\n          i = i + 1;\n        }\n        this.setState({ trips: newtrips });\n        this.forceUpdate();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <br></br>\n          <Form>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Search Trips...\"\n                    onChange={this.onChangeTripsSearch}\n                  />\n                </Form.Group>\n              </Col>\n              <Col className=\"App-header\">Trip OARganizer</Col>\n              <Col>\n                <Button variant=\"outline-secondary\" as={Link} to=\"/create\">\n                  Add a Trip! +\n                </Button>\n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n              <Col>\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Trip Type</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        onChange={this.onChangeTripsType}\n                      >\n                        <option>Hiking</option>\n                        <option>Backpacking</option>\n                        <option>Climbing</option>\n                        <option>Paddling</option>\n                        <option>Caving</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Label>Trip Duration (days)</Form.Label>\n                    <FormControl\n                      type=\"number\"\n                      onChange={this.onChangeTripsDays}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Difficulty</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        id=\"difficulty\"\n                        name=\"difficulty\"\n                        onChange={this.onChangeTripsDifficulty}\n                        required\n                      >\n                        <option>Beginner</option>\n                        <option>Intermediate</option>\n                        <option>Experienced</option>\n                        <option>Professional</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Max Travel Distance (miles)</Form.Label>\n                      <Form.Control\n                        onChange={this.onChangeTripsDistance}\n                        type=\"number\"\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Start Location (longitude)</Form.Label>\n                      <Form.Control\n                        value = {29.62669}\n                        onChange={this.onChangeTripsX}\n                        type=\"number\"\n                      />\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Start Location (latitude)</Form.Label>\n                      <Form.Control\n                        value = {-82.35617}\n                        onChange={this.onChangeTripsY}\n                        type=\"number\"\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Button\n                      as={Link}\n                      to=\"/\"\n                      variant=\"success\"\n                      onClick={this.findTrip}\n                    >\n                      Find me a Trip!\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n              <Col>\n                <Image src={mount} fluid></Image>\n              </Col>\n            </Row>\n          </Form>\n          <Row>\n            <h3>Trip List</h3>\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Title</th>\n                  <th>Description</th>\n                  <th>Difficulty</th>\n                  <th>Days</th>\n                  <th>Type</th>\n                  <th>Longitude</th>\n                  <th>Latitude</th>\n                </tr>\n              </thead>\n              <tbody>{this.tripsList()}</tbody>\n            </table>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nclass CreateTrip extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trips_name: \"\",\n      trips_description: \"\",\n      trips_difficulty: \"Beginner\",\n      trips_days: 0,\n      trips_x: 0,\n      trips_y: 0,\n      trips_type: \"Hiking\",\n    };\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChangeTripsName(e) {\n    this.setState({\n      trips_name: e.target.value,\n    });\n  }\n  onChangeTripsDescription(e) {\n    this.setState({\n      trips_description: e.target.value,\n    });\n  }\n  onChangeTripsDifficulty(e) {\n    this.setState({\n      trips_difficulty: e.target.value,\n    });\n  }\n  onChangeTripsDays(e) {\n    this.setState({\n      trips_days: e.target.value,\n    });\n  }\n  onChangeTripsX(e) {\n    this.setState({\n      trips_x: e.target.value,\n    });\n  }\n  onChangeTripsY(e) {\n    this.setState({\n      trips_y: e.target.value,\n    });\n  }\n  onChangeTripsType(e) {\n    this.setState({\n      trips_type: e.target.value,\n    });\n  }\n  onSubmit(e) {\n    console.log(`Trip submitted: ${this.state.trips_name}`);\n\n    const newTrips = {\n      trips_name: this.state.trips_name,\n      trips_description: this.state.trips_description,\n      trips_difficulty: this.state.trips_difficulty,\n      trips_days: this.state.trips_days,\n      trips_type: this.state.trips_type,\n      trips_x: this.state.trips_x,\n      trips_y: this.state.trips_y,\n    };\n\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        return user;\n      } catch (err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous()\n      .then((user) => {\n        console.log(\"Successfully logged in!\", user);\n      })\n      .then(() => {\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n        const hikes = trips.insertOne(newTrips);\n        return hikes;\n      })\n      .then((hikes) => {\n        console.log(\"Inserted: \", hikes);\n      });\n    this.setState({\n      trips_name: \"\",\n      trips_description: \"\",\n      trips_difficulty: \"Beginner\",\n      trips_days: 0,\n      trips_x: 0,\n      trips_y: 0,\n      trips_type: \"Hiking\",\n    });\n    var form = document.getElementById(\"form\");\n    form.reset();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <br></br>\n          <Form id=\"form\">\n            <Row>\n              <Col></Col>\n              <Col className=\"App-header\">Trip OARganizer</Col>\n              <Col>\n                <Button variant=\"outline-secondary\" as={Link} to=\"/\">\n                  Back To Trip Suggestion\n                </Button>\n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n              {\" \"}\n              {/*body*/}\n              <Col>\n                {\" \"}\n                {/*col for inputs*/}\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Title</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        onChange={this.onChangeTripsName}\n                      ></Form.Control>\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Description</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        onChange={this.onChangeTripsDescription}\n                      ></Form.Control>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Difficulty</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        id=\"difficulty\"\n                        name=\"difficulty\"\n                        required\n                        onChange={this.onChangeTripsDifficulty}\n                      >\n                        <option>Beginner</option>\n                        <option>Intermediate</option>\n                        <option>Experienced</option>\n                        <option>Professional</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                  <Col>\n                    Trip Duration (days)\n                    <FormControl\n                      type=\"number\"\n                      onChange={this.onChangeTripsDays}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    Trip Location (longitude)\n                    <FormControl type=\"number\" onChange={this.onChangeTripsX} />\n                  </Col>\n                  <Col>\n                    Trip Location (latitude)\n                    <FormControl type=\"number\" onChange={this.onChangeTripsY} />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Form.Group>\n                      <Form.Label>Trip Type</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        onChange={this.onChangeTripsType}\n                      >\n                        <option>Hiking</option>\n                        <option>Backpacking</option>\n                        <option>Climbing</option>\n                        <option>Paddling</option>\n                        <option>Caving</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <Button\n                      variant=\"success\"\n                      onClick={this.onSubmit}\n                      as={Link}\n                      to=\"/create\"\n                    >\n                      Add Trip!\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n              <Col>\n                <Image src={mount} fluid></Image>\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Router>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/create\" component={CreateTrip} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}