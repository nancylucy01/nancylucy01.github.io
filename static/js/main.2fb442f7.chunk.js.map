{"version":3,"sources":["mountain2.jpg","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","FormControl","type","placeholder","onChange","onSubmit","React","Component","Trips","trips","trips_name","trips_description","trips_difficulty","trips_days","trips_type","trips_x","trips_y","Home","trips_distance","onChangeTripsName","onChangeTripsDescription","onChangeTripsDifficulty","onChangeTripsDays","onChangeTripsType","onChangeTripsX","onChangeTripsY","findTrip","e","app","Realm","getApp","a","credentials","anonymous","logIn","user","console","error","loginAnonymous","then","log","currentUser","mongoClient","db","collection","find","hikes","forceUpdate","map","currentTrips","i","newtrips","length","curTrip","push","className","Container","Form","Row","Col","Group","Button","variant","as","Link","to","Label","Control","id","name","required","onChangeTripsDistance","onClick","Image","src","mount","fluid","tripsList","CreateTrip","newTrips","insertOne","document","getElementById","reset","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2fb442f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mountain2.56a5f758.jpg\";","import {Image, InputGroup, Container, Row, Col, Button, Form, FormControl} from \"react-bootstrap\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport mount from \"./mountain2.jpg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport * as Realm from \"realm-web\"\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    //To handle changes to an alternate 'this', create a parent class and have each update in render\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n  }\n  render() {\n    return (\n      <div>\n        \n        <FormControl \n        type=\"text\" \n        placeholder=\"Search Trips...\" \n        onChange={this.handleChange} \n        onSubmit={this.handleSubmit}\n        />\n      </div>\n    )\n  }\n}\nconst Trips = props => (\n  <tr>\n      <td>{props.trips.trips_name}</td>\n      <td>{props.trips.trips_description}</td>\n      <td>{props.trips.trips_difficulty}</td>\n      <td>{props.trips.trips_days}</td>\n      <td>{props.trips.trips_type}</td>\n      <td>{props.trips.trips_x}</td>\n      <td>{props.trips.trips_y}</td>\n  </tr>\n)\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trips: [], \n      trips_name: '',\n      trips_description: '',\n      trips_difficulty: 'Beginner',\n      trips_days: 0,\n      trips_x: 0,\n      trips_y: 0,\n      trips_type: 'Hiking',\n      trips_distance: 'Hiking'\n    }\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\n    this.findTrip = this.findTrip.bind(this);\n  }\n  onChangeTripsName(e) {\n    this.setState({\n        trips_name: e.target.value\n    });\n  }\n  onChangeTripsDescription(e) {\n    this.setState({\n      trips_description: e.target.value\n    });\n  }\n  onChangeTripsDifficulty(e) {\n    this.setState({\n      trips_difficulty: e.target.value\n    });\n  }\n  onChangeTripsDays(e) {\n    this.setState({\n      trips_days: e.target.value\n    });\n  }\n  onChangeTripsX(e) {\n    this.setState({\n      trips_x: e.target.value\n    });\n  }\n  onChangeTripsY(e) {\n    this.setState({\n      trips_y: e.target.value\n    });\n  }\n  onChangeTripsType(e) {\n    this.setState({\n      trips_type: e.target.value\n    });\n  }\n  onChangeTripsDistance(e) {\n    this.setState({\n      trips_distance: e.target.value\n    });\n  }\n  componentDidMount() {\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\"); \n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        return user\n      } catch(err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous().then(user => {\n      console.log(\"Successfully logged in!\", user)\n    }).then(() => {\n      const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n      const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n      const hikes = trips.find()\n      return hikes;\n    }).then((hikes) =>{\n      this.state.trips = hikes;\n      console.log(this.state.trips)\n      this.forceUpdate()\n    })\n  } //to be moved to the trip find page\n  tripsList() {\n    return this.state.trips.map(function(currentTrips, i){\n        return <Trips trips={currentTrips} key={i} />;\n    })\n  }\n  findTrip(){\n    //update trips back to default\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\"); \n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        return user\n      } catch(err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous().then(user => {\n      console.log(\"Successfully logged in!\", user)\n    }).then(() => {\n      const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n      const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n      const hikes = trips.find()\n      return hikes;\n    }).then((hikes) =>{\n      this.state.trips = hikes;\n    }).then(()=>{\n\n    //Then do any new trip setting\n    var i = 0;\n    var newtrips = []\n    while (i < this.state.trips.length){\n      let curTrip = this.state.trips[i]\n      if(curTrip.trips_type == this.state.trips_type){\n        newtrips.push(curTrip)\n      }\n      i = i + 1;\n    }\n    this.setState({trips: newtrips})\n    this.forceUpdate()\n    })\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <Container >\n      <br></br>\n      <Form \n      >\n        <Row>\n          <Col>\n            <Form.Group>\n              <SearchBar \n              ></SearchBar>\n            </Form.Group>\n          </Col>\n          <Col className=\"App-header\">Trip OARganizer</Col>\n          <Col>\n            <Button variant=\"outline-secondary\"\n            as={Link}\n            to=\"/create\"\n            > \n              Add a Trip! +\n            </Button>\n          </Col>\n        </Row>\n        <br></br>\n        <Row> \n          <Col> \n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Trip Type</Form.Label>\n                  <Form.Control as=\"select\"\n                    onChange={this.onChangeTripsType}\n                  >\n                    <option>Hiking</option>\n                    <option>Backpacking</option>\n                    <option>Climbing</option>\n                    <option>Paddling</option>\n                    <option>Caving</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                Trip Duration (days)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsDays}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Difficulty</Form.Label>\n                  <Form.Control as=\"select\"\n                  id = \"difficulty\"\n                  name = \"difficulty\"\n                  onChange={this.onChangeTripsDifficulty}\n                  required\n                  >\n                    <option>Beginner</option>\n                    <option>Intermediate</option>\n                    <option>Experienced</option>\n                    <option>Professional</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                  <Form.Group>\n                    <Form.Label>Travel Distance (miles)</Form.Label>\n                    <Form.Control\n                      onChange={this.onChangeTripsDistance}\n                      type=\"number\"/>\n                  </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Start Location (x-coord)</Form.Label>\n                  <Form.Control\n                    onChange={this.onChangeTripsX}\n                    type=\"number\"/>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Start Location (y-coord)</Form.Label>\n                  <Form.Control\n                    onChange={this.onChangeTripsY}\n                    type=\"number\"/>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Button\n                  as={Link}\n                  to= \"/\"\n                  variant=\"success\"\n                  onClick={this.findTrip}\n                >\n                  Find me a Trip!\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Image \n            src= {mount}\n            fluid\n            ></Image>\n          </Col>\n        </Row>\n        </Form>\n        <Row>\n          <h3>Trip List</h3>\n            <table className=\"table table-striped\" >\n                <thead>\n                    <tr>\n                      <th>Title</th>\n                      <th>Description</th>\n                      <th>Difficulty</th>\n                      <th>Days</th>\n                      <th>Type</th>\n                      <th>X</th>\n                      <th>Y</th>\n                    </tr>\n                </thead>\n                <tbody>\n                  {this.tripsList() }\n                </tbody>\n            </table>\n          </Row>\n      </Container>\n    </div>\n  )\n  }\n}\nclass CreateTrip extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        trips_name: '',\n        trips_description: '',\n        trips_difficulty: 'Beginner',\n        trips_days: 0,\n        trips_x: 0,\n        trips_y: 0,\n        trips_type: 'Hiking',\n    }\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChangeTripsName(e) {\n    this.setState({\n        trips_name: e.target.value\n    });\n  }\n  onChangeTripsDescription(e) {\n    this.setState({\n      trips_description: e.target.value\n    });\n  }\n  onChangeTripsDifficulty(e) {\n    this.setState({\n      trips_difficulty: e.target.value\n    });\n  }\n  onChangeTripsDays(e) {\n    this.setState({\n      trips_days: e.target.value\n    });\n  }\n  onChangeTripsX(e) {\n    this.setState({\n      trips_x: e.target.value\n    });\n  }\n  onChangeTripsY(e) {\n    this.setState({\n      trips_y: e.target.value\n    });\n  }\n  onChangeTripsType(e) {\n    this.setState({\n      trips_type: e.target.value\n    });\n  }\n  onSubmit(e) {\n    console.log(`Trip submitted: ${this.state.trips_name}`);\n    \n    const newTrips = {\n      trips_name: this.state.trips_name,\n      trips_description: this.state.trips_description,\n      trips_difficulty: this.state.trips_difficulty,\n      trips_days: this.state.trips_days,\n      trips_type: this.state.trips_type,\n      trips_x: this.state.trips_x,\n      trips_y: this.state.trips_y\n    }\n\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\"); \n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        return user\n      } catch(err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous().then(user => {\n      console.log(\"Successfully logged in!\", user)\n    }).then(() => {\n      const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n      const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n      const hikes = trips.insertOne(newTrips)\n      return hikes;\n    }).then((hikes) =>{\n      console.log(\"Inserted: \", hikes)\n    })\n    this.setState({\n      trips_name: '',\n      trips_description: '',\n      trips_difficulty: 'Beginner',\n      trips_days: 0,\n      trips_x: 0,\n      trips_y: 0,\n      trips_type: 'Hiking',\n    })\n    var form = document.getElementById(\"form\");\n    form.reset();\n  }\n  render (){\n    return (\n      <div className=\"App\">\n      <Container >\n      <br></br>\n      <Form id = \"form\"\n      >\n        <Row>\n          <Col>\n            <Form.Group>\n              <SearchBar \n              ></SearchBar>\n            </Form.Group>\n          </Col>\n          <Col className=\"App-header\">Trip OARganizer</Col>\n          <Col>\n            <Button variant=\"outline-secondary\"\n            as={Link}\n            to=\"/\"\n            > \n              Back To Trip Suggestion \n            </Button>\n          </Col>\n        </Row>\n        <br></br>\n        <Row> {/*body*/}\n          <Col> {/*col for inputs*/}\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control \n                    type = \"text\"\n                    onChange={this.onChangeTripsName}\n                  >\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control \n                    type = \"text\"\n                    onChange={this.onChangeTripsDescription}\n                  >\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Difficulty</Form.Label>\n                  <Form.Control as=\"select\"\n                  id = \"difficulty\"\n                  name = \"difficulty\"\n                  required\n                  onChange={this.onChangeTripsDifficulty}\n                  >\n                    <option>Beginner</option>\n                    <option>Intermediate</option>\n                    <option>Experienced</option>\n                    <option>Professional</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n              Trip Duration (days)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsDays}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              Trip Location (x-coord)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsX}\n                />\n              </Col>\n              <Col>\n              Trip Location (y-coord)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsY}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Form.Group>\n                  <Form.Label>Trip Type</Form.Label>\n                  <Form.Control as=\"select\"\n                  onChange={this.onChangeTripsType}\n                  >\n                    <option>Hiking</option>\n                    <option>Backpacking</option>\n                    <option>Climbing</option>\n                    <option>Paddling</option>\n                    <option>Caving</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Button\n                  variant=\"success\"\n                  onClick={this.onSubmit}\n                  as={Link}\n                  to=\"/create\"\n                >\n                  Add Trip!\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Image \n            src= {mount}\n            fluid\n            ></Image>\n          </Col>\n        </Row>\n        </Form>\n      </Container>\n    </div>\n    )\n  }\n}\n\nclass App extends React.Component { \n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/create\" component={CreateTrip} />\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}