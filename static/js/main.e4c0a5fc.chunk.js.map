{"version":3,"sources":["mountain2.jpg","App.js","reportWebVitals.js","index.js"],"names":["Trips","props","trips","trips_name","trips_description","trips_difficulty","trips_days","trips_type","trips_x","trips_y","Home","state","trips_distance","trips_search","onChangeTripsName","bind","onChangeTripsDescription","onChangeTripsDifficulty","onChangeTripsDays","onChangeTripsType","onChangeTripsX","onChangeTripsY","findTrip","searchTrip","onChangeTripsSearch","e","preventDefault","this","setState","target","value","console","log","app","Realm","getApp","a","credentials","anonymous","logIn","user","error","loginAnonymous","then","currentUser","mongoClient","db","collection","find","hikes","forceUpdate","map","currentTrips","i","length","newtrips","curTrip","push","search","String","className","Container","Form","Row","Col","Group","FormControl","type","placeholder","onChange","Button","variant","as","Link","to","Label","Control","id","name","required","onChangeTripsDistance","onClick","Image","src","mount","fluid","tripsList","React","Component","CreateTrip","onSubmit","newTrips","insertOne","document","getElementById","reset","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4c0a5fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mountain2.56a5f758.jpg\";","import {\r\n  Image,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport mount from \"./mountain2.jpg\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport * as Realm from \"realm-web\";\r\n\r\nconst Trips = (props) => (\r\n  <tr>\r\n    <td>{props.trips.trips_name}</td>\r\n    <td>{props.trips.trips_description}</td>\r\n    <td>{props.trips.trips_difficulty}</td>\r\n    <td>{props.trips.trips_days}</td>\r\n    <td>{props.trips.trips_type}</td>\r\n    <td>{props.trips.trips_x}</td>\r\n    <td>{props.trips.trips_y}</td>\r\n  </tr>\r\n);\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trips: [],\r\n      trips_name: \"\",\r\n      trips_description: \"\",\r\n      trips_difficulty: \"Beginner\",\r\n      trips_days: 0,\r\n      trips_x: 0,\r\n      trips_y: 0,\r\n      trips_type: \"Hiking\",\r\n      trips_distance: 0,\r\n      trips_search: \"\",\r\n    };\r\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\r\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\r\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\r\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\r\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\r\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\r\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\r\n    this.findTrip = this.findTrip.bind(this);\r\n    this.searchTrip = this.searchTrip.bind(this);\r\n    this.onChangeTripsSearch = this.onChangeTripsSearch.bind(this);\r\n  }\r\n  onChangeTripsSearch(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      trips_search: e.target.value,\r\n    });\r\n    console.log(this.state.trips_search);\r\n  }\r\n  onChangeTripsName(e) {\r\n    this.setState({\r\n      trips_name: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDescription(e) {\r\n    this.setState({\r\n      trips_description: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDifficulty(e) {\r\n    this.setState({\r\n      trips_difficulty: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDays(e) {\r\n    this.setState({\r\n      trips_days: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsX(e) {\r\n    this.setState({\r\n      trips_x: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsY(e) {\r\n    this.setState({\r\n      trips_y: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsType(e) {\r\n    this.setState({\r\n      trips_type: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDistance(e) {\r\n    this.setState({\r\n      trips_distance: e.target.value,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\r\n    async function loginAnonymous() {\r\n      // Create an anonymous credential\r\n      const credentials = Realm.Credentials.anonymous();\r\n      try {\r\n        // Authenticate the user\r\n        const user = await app.logIn(credentials);\r\n        return user;\r\n      } catch (err) {\r\n        console.error(\"Failed to log in\", err);\r\n      }\r\n    }\r\n    loginAnonymous()\r\n      .then((user) => {\r\n        console.log(\"Successfully logged in!\", user);\r\n      })\r\n      .then(() => {\r\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\r\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\r\n        const hikes = trips.find();\r\n        return hikes;\r\n      })\r\n      .then((hikes) => {\r\n        this.state.trips = hikes;\r\n        console.log(this.state.trips);\r\n        this.forceUpdate();\r\n      });\r\n  } //to be moved to the trip find page\r\n  tripsList() {\r\n    return this.state.trips.map(function (currentTrips, i) {\r\n      return <Trips trips={currentTrips} key={i} />;\r\n    });\r\n  }\r\n  findTrip() {\r\n    //update trips back to default\r\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\r\n    async function loginAnonymous() {\r\n      // Create an anonymous credential\r\n      const credentials = Realm.Credentials.anonymous();\r\n      try {\r\n        // Authenticate the user\r\n        const user = await app.logIn(credentials);\r\n        return user;\r\n      } catch (err) {\r\n        console.error(\"Failed to log in\", err);\r\n      }\r\n    }\r\n    loginAnonymous()\r\n      .then((user) => {\r\n        console.log(\"Successfully logged in!\", user);\r\n      })\r\n      .then(() => {\r\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\r\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\r\n        const hikes = trips.find();\r\n        return hikes;\r\n      })\r\n      .then((hikes) => {\r\n        this.state.trips = hikes;\r\n      })\r\n      .then(() => {\r\n        //Then do any new trip setting\r\n        console.log(this.state.trips_search.length);\r\n        if (this.state.trips_search === \"\") {\r\n          var i = 0;\r\n          var newtrips = [];\r\n          while (i < this.state.trips.length) {\r\n            let curTrip = this.state.trips[i];\r\n            if (curTrip.trips_type == this.state.trips_type) {\r\n              newtrips.push(curTrip);\r\n            }\r\n            i = i + 1;\r\n          }\r\n          this.setState({ trips: newtrips });\r\n          this.forceUpdate();\r\n        } else {\r\n          this.searchTrip();\r\n        }\r\n      });\r\n  }\r\n\r\n  searchTrip() {\r\n    //update trips back to default\r\n    // event.preventDefault();\r\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\r\n    async function loginAnonymous() {\r\n      // Create an anonymous credential\r\n      const credentials = Realm.Credentials.anonymous();\r\n      try {\r\n        // Authenticate the user\r\n        const user = await app.logIn(credentials);\r\n        return user;\r\n      } catch (err) {\r\n        console.error(\"Failed to log in\", err);\r\n      }\r\n    }\r\n    loginAnonymous()\r\n      .then((user) => {\r\n        console.log(\"Successfully logged in!\", user);\r\n      })\r\n      .then(() => {\r\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\r\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\r\n        const hikes = trips.find({});\r\n        return hikes;\r\n      })\r\n      .then((hikes) => {\r\n        this.state.trips = hikes;\r\n      })\r\n      .then(() => {\r\n        //Then do any new trip setting\r\n        var i = 0;\r\n        var newtrips = [];\r\n        while (i < this.state.trips.length) {\r\n          let curTrip = this.state.trips[i];\r\n          console.log(\r\n            curTrip.trips_name.search(String(this.state.trips_search))\r\n          );\r\n          if (\r\n            String(curTrip.trips_name).search(\r\n              String(this.state.trips_search)\r\n            ) >= 0\r\n          ) {\r\n            console.log(\"addedTrip\");\r\n            newtrips.push(curTrip);\r\n          }\r\n          i = i + 1;\r\n        }\r\n        this.setState({ trips: newtrips });\r\n        this.forceUpdate();\r\n      });\r\n    // event.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <br></br>\r\n          <Form>\r\n            <Row>\r\n              <Col>\r\n                <Form.Group>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Search Trips...\"\r\n                    onChange={this.onChangeTripsSearch}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col className=\"App-header\">Trip OARganizer</Col>\r\n              <Col>\r\n                <Button variant=\"outline-secondary\" as={Link} to=\"/create\">\r\n                  Add a Trip! +\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <br></br>\r\n            <Row>\r\n              <Col>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Trip Type</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        onChange={this.onChangeTripsType}\r\n                      >\r\n                        <option>Hiking</option>\r\n                        <option>Backpacking</option>\r\n                        <option>Climbing</option>\r\n                        <option>Paddling</option>\r\n                        <option>Caving</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    Trip Duration (days)\r\n                    <FormControl\r\n                      type=\"number\"\r\n                      onChange={this.onChangeTripsDays}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Difficulty</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        id=\"difficulty\"\r\n                        name=\"difficulty\"\r\n                        onChange={this.onChangeTripsDifficulty}\r\n                        required\r\n                      >\r\n                        <option>Beginner</option>\r\n                        <option>Intermediate</option>\r\n                        <option>Experienced</option>\r\n                        <option>Professional</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Travel Distance (miles)</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.onChangeTripsDistance}\r\n                        type=\"number\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Start Location (longitude)</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.onChangeTripsX}\r\n                        type=\"number\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Start Location (latitude)</Form.Label>\r\n                      <Form.Control\r\n                        onChange={this.onChangeTripsY}\r\n                        type=\"number\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      as={Link}\r\n                      to=\"/\"\r\n                      variant=\"success\"\r\n                      onClick={this.findTrip}\r\n                    >\r\n                      Find me a Trip!\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Image src={mount} fluid></Image>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <Row>\r\n            <h3>Trip List</h3>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Title</th>\r\n                  <th>Description</th>\r\n                  <th>Difficulty</th>\r\n                  <th>Days</th>\r\n                  <th>Type</th>\r\n                  <th>X</th>\r\n                  <th>Y</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{this.tripsList()}</tbody>\r\n            </table>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass CreateTrip extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      trips_name: \"\",\r\n      trips_description: \"\",\r\n      trips_difficulty: \"Beginner\",\r\n      trips_days: 0,\r\n      trips_x: 0,\r\n      trips_y: 0,\r\n      trips_type: \"Hiking\",\r\n    };\r\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\r\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\r\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\r\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\r\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\r\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\r\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChangeTripsName(e) {\r\n    this.setState({\r\n      trips_name: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDescription(e) {\r\n    this.setState({\r\n      trips_description: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDifficulty(e) {\r\n    this.setState({\r\n      trips_difficulty: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsDays(e) {\r\n    this.setState({\r\n      trips_days: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsX(e) {\r\n    this.setState({\r\n      trips_x: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsY(e) {\r\n    this.setState({\r\n      trips_y: e.target.value,\r\n    });\r\n  }\r\n  onChangeTripsType(e) {\r\n    this.setState({\r\n      trips_type: e.target.value,\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    console.log(`Trip submitted: ${this.state.trips_name}`);\r\n\r\n    const newTrips = {\r\n      trips_name: this.state.trips_name,\r\n      trips_description: this.state.trips_description,\r\n      trips_difficulty: this.state.trips_difficulty,\r\n      trips_days: this.state.trips_days,\r\n      trips_type: this.state.trips_type,\r\n      trips_x: this.state.trips_x,\r\n      trips_y: this.state.trips_y,\r\n    };\r\n\r\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\");\r\n    async function loginAnonymous() {\r\n      // Create an anonymous credential\r\n      const credentials = Realm.Credentials.anonymous();\r\n      try {\r\n        // Authenticate the user\r\n        const user = await app.logIn(credentials);\r\n        return user;\r\n      } catch (err) {\r\n        console.error(\"Failed to log in\", err);\r\n      }\r\n    }\r\n    loginAnonymous()\r\n      .then((user) => {\r\n        console.log(\"Successfully logged in!\", user);\r\n      })\r\n      .then(() => {\r\n        const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\r\n        const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\r\n        const hikes = trips.insertOne(newTrips);\r\n        return hikes;\r\n      })\r\n      .then((hikes) => {\r\n        console.log(\"Inserted: \", hikes);\r\n      });\r\n    this.setState({\r\n      trips_name: \"\",\r\n      trips_description: \"\",\r\n      trips_difficulty: \"Beginner\",\r\n      trips_days: 0,\r\n      trips_x: 0,\r\n      trips_y: 0,\r\n      trips_type: \"Hiking\",\r\n    });\r\n    var form = document.getElementById(\"form\");\r\n    form.reset();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <br></br>\r\n          <Form id=\"form\">\r\n            <Row>\r\n              <Col></Col>\r\n              <Col className=\"App-header\">Trip OARganizer</Col>\r\n              <Col>\r\n                <Button variant=\"outline-secondary\" as={Link} to=\"/\">\r\n                  Back To Trip Suggestion\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <br></br>\r\n            <Row>\r\n              {\" \"}\r\n              {/*body*/}\r\n              <Col>\r\n                {\" \"}\r\n                {/*col for inputs*/}\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        onChange={this.onChangeTripsName}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        onChange={this.onChangeTripsDescription}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Difficulty</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        id=\"difficulty\"\r\n                        name=\"difficulty\"\r\n                        required\r\n                        onChange={this.onChangeTripsDifficulty}\r\n                      >\r\n                        <option>Beginner</option>\r\n                        <option>Intermediate</option>\r\n                        <option>Experienced</option>\r\n                        <option>Professional</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col>\r\n                    Trip Duration (days)\r\n                    <FormControl\r\n                      type=\"number\"\r\n                      onChange={this.onChangeTripsDays}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    Trip Location (longitude)\r\n                    <FormControl type=\"number\" onChange={this.onChangeTripsX} />\r\n                  </Col>\r\n                  <Col>\r\n                    Trip Location (latitude)\r\n                    <FormControl type=\"number\" onChange={this.onChangeTripsY} />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Form.Group>\r\n                      <Form.Label>Trip Type</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        onChange={this.onChangeTripsType}\r\n                      >\r\n                        <option>Hiking</option>\r\n                        <option>Backpacking</option>\r\n                        <option>Climbing</option>\r\n                        <option>Paddling</option>\r\n                        <option>Caving</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Button\r\n                      variant=\"success\"\r\n                      onClick={this.onSubmit}\r\n                      as={Link}\r\n                      to=\"/create\"\r\n                    >\r\n                      Add Trip!\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <Image src={mount} fluid></Image>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/create\" component={CreateTrip} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}