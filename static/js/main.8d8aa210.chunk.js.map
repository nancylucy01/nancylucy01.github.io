{"version":3,"sources":["mountain2.jpg","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","preventDefault","FormControl","type","placeholder","onChange","onSubmit","React","Component","Stepper","handlePlus","handleMinus","console","log","InputGroup","Prepend","Button","variant","onClick","Trips","trips","trips_name","trips_description","trips_difficulty","trips_days","trips_type","trips_x","trips_y","Home","app","Realm","getApp","a","credentials","anonymous","logIn","user","error","loginAnonymous","then","currentUser","mongoClient","db","collection","find","hikes","forceUpdate","map","currentTrips","i","className","Container","Form","Row","Col","Group","as","Link","to","Label","Control","id","name","required","Image","src","mount","fluid","tripsList","CreateTrip","onChangeTripsName","onChangeTripsDescription","onChangeTripsDifficulty","onChangeTripsDays","onChangeTripsType","onChangeTripsX","onChangeTripsY","e","newTrips","insertOne","document","getElementById","reset","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8d8aa210.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mountain2.56a5f758.jpg\";","import {Image, InputGroup, Container, Row, Col, Button, Form, FormControl} from \"react-bootstrap\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport mount from \"./mountain2.jpg\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport * as Realm from \"realm-web\"\n// import mongoose from \"mongoose\"\n\n// const bodyParser = require('body-parser');\n// const mongoose = require('mongoose');\n// let Trips = require('./trips.model')\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    //To handle changes to an alternate 'this', create a parent class and have each update in render\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n  }\n  render() {\n    return (\n      <div>\n        \n        <FormControl \n        type=\"text\" \n        placeholder=\"Search Trips...\" \n        onChange={this.handleChange} \n        onSubmit={this.handleSubmit}\n        />\n      </div>\n    )\n  }\n}\n\nclass Stepper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    //To handle changes to an alternate 'this', create a parent class and have each update in render\n    this.handleChange = this.handleChange.bind(this);\n    this.handlePlus = this.handlePlus.bind(this);\n    this.handleMinus = this.handleMinus.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: this.state.value });\n  }\n\n  handlePlus(event) {\n    console.log(this.state.value);\n    this.setState({ value: this.state.value + 1})\n  }\n  handleMinus(event) {\n    if (this.state.value > 0) {\n      this.setState({ value: this.state.value - 1})\n    }\n  }\n  render() {\n    return (\n      <div>\n        <InputGroup\n         \n        >\n          <InputGroup.Prepend>\n            <Button \n            variant=\"outline-success\"\n            onClick={this.handlePlus}\n            >+</Button>\n            <Button\n            variant=\"outline-success\"\n            onClick={this.handleMinus}\n            > - </Button>\n          </InputGroup.Prepend>\n          <FormControl \n            onChange={this.handleChange} \n            value = {this.state.value + \" days\"}\n\n          />\n        </InputGroup>\n      </div>\n    )\n  }\n}\nconst Trips = props => (\n  <tr>\n      <td>{props.trips.trips_name}</td>\n      <td>{props.trips.trips_description}</td>\n      <td>{props.trips.trips_difficulty}</td>\n      <td>{props.trips.trips_days}</td>\n      <td>{props.trips.trips_type}</td>\n      <td>{props.trips.trips_x}</td>\n      <td>{props.trips.trips_y}</td>\n      {/* <td>\n        <Link to={\"/edit/\"+props.trips._id}>Edit</Link> \n      </td> */}\n  </tr>\n)\n\n\n// Create a component that lets an anonymous user log in\n// const APP_ID = \"tripwizard-lxwwv\"\n// const app = new Realm.App({ id: APP_ID });\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trips: [], //to be moved to the trip find page\n      // user : app.currentUser\n\n    };\n  }\n  // setUser(user2){\n  //   this.state.user = user2\n  // }\n  componentDidMount() {\n    // const bodyParser = require('body-parser');\n    // const mongoose = require('mongoose');\n    // let Trips = require('./trips.model')\n    // const URI1 = 'mongodb+srv://alexlink404:';\n    // const URI2 = 'turtles@cluster0.8sigs.mongodb.net/myFirstDatabase?retryWrites=true&w=majority';\n    // // mongoose.connect(URI1 + URI2, { useNewUrlParser: true });\n    // const connection = mongoose.connection;connection.once('open', function() {\n    //     console.log(\"MongoDB database connection established successfully\");\n    // })\n    // let url =  `https://realm.mongodb.com/api/client/v2.0/app/${APP_ID}/trips`\n    // loginAnonymous()\n    // const mongodb = context.services.get(\"mongodb-atlas\");\n    // const tripsCollection = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n    // console.log(tripsCollection)\n    // this.state.user = app.logIn(Realm.Credentials.anonymous())\n    // console.log(app.currentUser.customData.memberOf)\n    // this.setState({trips: app.currentUser.customData.memberOf});\n    // fetch(url, { \n    //   method: 'GET',\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //     Accept: \"application/json\"\n    //   }\n    // })\n    // .then(res => res.json())\n    // .then((response) => {\n    //   console.log(\"response from mongodb: \", response);\n    //   this.setState({trips: response});\n    // })\n    // .catch(error => {\n    //   console.log(\"There was an error with the mongodb request: \", error);\n    // });\n    // axios.get('http://localhost:'+PORT+'/trips/')\n    //     .then(response => {\n    //         this.setState({ trips: response.data });\n    //     })\n    //     .catch(function (error){\n    //         console.log(error);\n    // //     })\n    // const id = \"tripwizard-lxwwv\";\n    // const config = {\n    //   id,\n    // };\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\"); \n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        // `App.currentUser` updates to match the logged in user\n        // assert(user.id === app.currentUser.id)\n        return user\n      } catch(err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous().then(user => {\n      console.log(\"Successfully logged in!\", user)\n    }).then(() => {\n      const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n      const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n      const hikes = trips.find()\n      return hikes;\n    }).then((hikes) =>{\n      this.state.trips = hikes;\n      console.log(this.state.trips)\n      this.forceUpdate()\n    })\n  } //to be moved to the trip find page\n  tripsList() {\n    return this.state.trips.map(function(currentTrips, i){\n        return <Trips trips={currentTrips} key={i} />;\n    })\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <Container >\n      <br></br>\n      <Form \n      >\n        <Row>\n          <Col>\n            <Form.Group>\n              <SearchBar \n              ></SearchBar>\n            </Form.Group>\n          </Col>\n          <Col className=\"App-header\">Trip OARganizer</Col>\n          <Col>\n            <Button variant=\"outline-secondary\"\n            as={Link}\n            to=\"/create\"\n            > \n              Add a Trip! +\n            </Button>\n          </Col>\n        </Row>\n        <br></br>\n        <Row> \n          <Col> \n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Trip Type</Form.Label>\n                  <Form.Control as=\"select\">\n                    <option>Hiking</option>\n                    <option>Backpacking</option>\n                    <option>Climbing</option>\n                    <option>Paddling</option>\n                    <option>Caving</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                Trip Duration (days)\n                <Stepper />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Difficulty</Form.Label>\n                  <Form.Control as=\"select\"\n                  id = \"difficulty\"\n                  name = \"difficulty\"\n                  required\n                  >\n                    <option>Beginner</option>\n                    <option>Intermediate</option>\n                    <option>Experienced</option>\n                    <option>Professional</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                  <Form.Group>\n                    <Form.Label>Travel Distance (miles)</Form.Label>\n                    <Form.Control\n                     type=\"number\"/>\n                  </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Start Location (x-coord)</Form.Label>\n                  <Form.Control\n                    type=\"number\"/>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Start Location (y-coord)</Form.Label>\n                  <Form.Control\n                    type=\"number\"/>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Button\n                  as={Link}\n                  to= \"/\"\n                  variant=\"success\"\n                  // onClick={this.addTrip}\n                >\n                  Find me a Trip!\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Image \n            src= {mount}\n            fluid\n            ></Image>\n          </Col>\n        </Row>\n        </Form>\n        <Row>\n          <h3>Trip List</h3>\n            <table className=\"table table-striped\" >\n                <thead>\n                    <tr>\n                      <th>Title</th>\n                      <th>Description</th>\n                      <th>Difficulty</th>\n                      <th>Days</th>\n                      <th>Type</th>\n                      <th>X</th>\n                      <th>Y</th>\n                      <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                  {this.tripsList() }\n                </tbody>\n            </table>\n          </Row>\n      </Container>\n    </div>\n  )\n  }\n}\nclass CreateTrip extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        trips_name: '',\n        trips_description: '',\n        trips_difficulty: 'Beginner',\n        trips_days: 0,\n        trips_x: 0,\n        trips_y: 0,\n        trips_type: 'Hiking',\n    }\n    this.onChangeTripsName = this.onChangeTripsName.bind(this);\n    this.onChangeTripsDescription = this.onChangeTripsDescription.bind(this);\n    this.onChangeTripsDifficulty = this.onChangeTripsDifficulty.bind(this);\n    this.onChangeTripsDays = this.onChangeTripsDays.bind(this);\n    this.onChangeTripsType = this.onChangeTripsType.bind(this);\n    this.onChangeTripsX = this.onChangeTripsX.bind(this);\n    this.onChangeTripsY = this.onChangeTripsY.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onChangeTripsName(e) {\n    this.setState({\n        trips_name: e.target.value\n    });\n  }\n  onChangeTripsDescription(e) {\n    this.setState({\n      trips_description: e.target.value\n    });\n  }\n  onChangeTripsDifficulty(e) {\n    this.setState({\n      trips_difficulty: e.target.value\n    });\n  }\n  onChangeTripsDays(e) {\n    this.setState({\n      trips_days: e.target.value\n    });\n  }\n  onChangeTripsX(e) {\n    this.setState({\n      trips_x: e.target.value\n    });\n  }\n  onChangeTripsY(e) {\n    this.setState({\n      trips_y: e.target.value\n    });\n  }\n  onChangeTripsType(e) {\n    this.setState({\n      trips_type: e.target.value\n    });\n  }\n  onSubmit(e) {\n    console.log(`Trip submitted: ${this.state.trips_name}`);\n    \n    const newTrips = {\n      trips_name: this.state.trips_name,\n      trips_description: this.state.trips_description,\n      trips_difficulty: this.state.trips_difficulty,\n      trips_days: this.state.trips_days,\n      trips_type: this.state.trips_type,\n      trips_x: this.state.trips_x,\n      trips_y: this.state.trips_y\n    }\n\n    const app = Realm.App.getApp(\"tripwizard-lxwwv\"); \n    async function loginAnonymous() {\n      // Create an anonymous credential\n      const credentials = Realm.Credentials.anonymous();\n      try {\n        // Authenticate the user\n        const user = await app.logIn(credentials);\n        // `App.currentUser` updates to match the logged in user\n        // assert(user.id === app.currentUser.id)\n        return user\n      } catch(err) {\n        console.error(\"Failed to log in\", err);\n      }\n    }\n    loginAnonymous().then(user => {\n      console.log(\"Successfully logged in!\", user)\n    }).then(() => {\n      const mongodb = app.currentUser.mongoClient(\"mongodb-atlas\");\n      const trips = mongodb.db(\"myFirstDatabase\").collection(\"trips\");\n      const hikes = trips.insertOne(newTrips)\n      return hikes;\n    }).then((hikes) =>{\n      console.log(\"Inserted: \", hikes)\n    })\n\n    // axios.post('http://localhost:'+PORT+'/trips/add', newTrips)\n    //         .then(res => console.log(res.data));\n\n    this.setState({\n      trips_name: '',\n      trips_description: '',\n      trips_difficulty: 'Beginner',\n      trips_days: 0,\n      trips_x: 0,\n      trips_y: 0,\n      trips_type: 'Hiking',\n    })\n    var form = document.getElementById(\"form\");\n    form.reset();\n  }\n  render (){\n    return (\n      <div className=\"App\">\n      <Container >\n      <br></br>\n      <Form id = \"form\"\n      >\n        <Row>\n          <Col>\n            <Form.Group>\n              <SearchBar \n              ></SearchBar>\n            </Form.Group>\n          </Col>\n          <Col className=\"App-header\">Trip OARganizer</Col>\n          <Col>\n            <Button variant=\"outline-secondary\"\n            as={Link}\n            to=\"/\"\n            > \n              Back To Trip Suggestion \n            </Button>\n          </Col>\n        </Row>\n        <br></br>\n        <Row> {/*body*/}\n          <Col> {/*col for inputs*/}\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control \n                    type = \"text\"\n                    onChange={this.onChangeTripsName}\n                  >\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control \n                    type = \"text\"\n                    onChange={this.onChangeTripsDescription}\n                  >\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group>\n                  <Form.Label>Difficulty</Form.Label>\n                  <Form.Control as=\"select\"\n                  id = \"difficulty\"\n                  name = \"difficulty\"\n                  required\n                  onChange={this.onChangeTripsDifficulty}\n                  >\n                    <option>Beginner</option>\n                    <option>Intermediate</option>\n                    <option>Experienced</option>\n                    <option>Professional</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n              Trip Duration (days)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsDays}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              Trip Location (x-coord)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsX}\n                />\n              </Col>\n              <Col>\n              Trip Location (y-coord)\n                <FormControl \n                type = \"number\"\n                onChange={this.onChangeTripsY}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n              <Form.Group>\n                  <Form.Label>Trip Type</Form.Label>\n                  <Form.Control as=\"select\"\n                  onChange={this.onChangeTripsType}\n                  >\n                    <option>Hiking</option>\n                    <option>Backpacking</option>\n                    <option>Climbing</option>\n                    <option>Paddling</option>\n                    <option>Caving</option>\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Button\n                  variant=\"success\"\n                  onClick={this.onSubmit}\n                  as={Link}\n                  to=\"/create\"\n                >\n                  Add Trip!\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col>\n            <Image \n            src= {mount}\n            fluid\n            ></Image>\n          </Col>\n        </Row>\n        </Form>\n      </Container>\n    </div>\n    )\n  }\n}\n\nclass App extends React.Component { \n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n  \n  // handleChange(event) {\n  //   // Wat\n  // }\n  render() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/create\" component={CreateTrip} />\n      {/* <Route path=\"/find\" component={FindTrip} /> */}\n    </Router>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}